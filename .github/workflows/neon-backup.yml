name: Neon Database Backup

on:
  schedule:
    - cron: '0 3 * * 1'
  workflow_dispatch:

jobs:
  create-neon-backup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Manage Neon Database Backups
        env:
          NEON_API_KEY: ${{ secrets.NEON_API_KEY }}
          NEON_PROJECT_ID: ${{ secrets.NEON_PROJECT_ID }}
          MAX_BACKUPS: 5
        run: |
          # Création d'un nom de branche avec la date
          BACKUP_NAME="backup-$(date +%Y-%m-%d)"

          # 1. Récupérer la liste des branches de sauvegarde
          echo "Récupération des branches existantes..."
          BRANCHES=$(curl -s -X GET "https://console.neon.tech/api/v2/projects/$NEON_PROJECT_ID/branches" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $NEON_API_KEY")

          # Vérifier si la réponse est valide
          if echo "$BRANCHES" | jq -e . >/dev/null 2>&1; then
            echo "Format JSON valide, traitement des branches..."
            
            # 2. Filtrer pour ne garder que les branches de sauvegarde et les trier par date
            BACKUP_BRANCHES=$(echo $BRANCHES | jq -r '.branches[] | select(.name | startswith("backup-")) | {name: .name, id: .id, created_at: .created_at}' | jq -s 'sort_by(.created_at)')
            
            # 3. Supprimer les anciennes branches si nécessaire
            COUNT=$(echo $BACKUP_BRANCHES | jq -e '. | length')
            
            if [ $? -eq 0 ] && [ $COUNT -ge $MAX_BACKUPS ]; then
              # Nombre de branches à supprimer
              TO_DELETE=$((COUNT - MAX_BACKUPS + 1))
              
              echo "Suppression de $TO_DELETE anciennes branches de sauvegarde"
              
              for i in $(seq 0 $((TO_DELETE - 1))); do
                BRANCH_ID=$(echo $BACKUP_BRANCHES | jq -r ".[$i].id")
                BRANCH_NAME=$(echo $BACKUP_BRANCHES | jq -r ".[$i].name")
                
                echo "Suppression de la branche $BRANCH_NAME (ID: $BRANCH_ID)"
                curl -X DELETE "https://console.neon.tech/api/v2/projects/$NEON_PROJECT_ID/branches/$BRANCH_ID" \
                  -H "Authorization: Bearer $NEON_API_KEY"
              done
            else
              echo "Pas assez de branches à supprimer ou erreur dans le calcul"
            fi
          else
            echo "Erreur lors de la récupération des branches, format JSON invalide"
            echo "Réponse reçue: ${BRANCHES:0:100}..."
          fi

          # 4. Créer une nouvelle branche de sauvegarde
          echo "Création de la nouvelle sauvegarde: $BACKUP_NAME"
          curl -X POST "https://console.neon.tech/api/v2/projects/$NEON_PROJECT_ID/branches" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $NEON_API_KEY" \
            -d "{\"branch\": {\"name\": \"$BACKUP_NAME\"}}"

          echo "Sauvegarde Neon créée: $BACKUP_NAME"

      - name: Notify backup status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "Sauvegarde Neon réussie ✅"
          else
