model User {
  id                     String            @id @default(cuid())
  last_name              String
  first_name             String
  email                  String            @unique
  password               String
  username               String?           @unique
  authProvider           String?
  lastLogin              DateTime?
  verified               Boolean           @default(false)
  profile_picture        String?
  googleId               String?           @unique
  name                   String?
  moderatorRequestAt     DateTime?
  moderatorRequestStatus ModeratorRequest? @default(NOT_REQUESTED)
  createdAt              DateTime
  accounts               Account[]
  articles               Articles[]
  comments               Comments[]
  favorites              Favorites[]
  sessions               Session[]
  User_Role              User_Role[]
}

model User_Role {
  id      Int      @id @default(autoincrement())
  user_id String
  role    RoleType @default(READER)
  user    User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

enum RoleType {
  EDITOR
  ADMIN
  MODERATOR
  AUTHOR
  READER
  EXPERT
}

enum ModeratorRequest {
  NOT_REQUESTED
  PENDING
  APPROVED
  REJECTED
  DECLINED
  ACK_REJECT
}
