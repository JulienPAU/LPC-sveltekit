model Articles {
  id             Int        @id @default(autoincrement())
  user_id        String
  category_id    Int?
  title          String
  introduction   String?
  body           String?
  ending         String?
  publish_date   DateTime?
  submit_date    DateTime?  // Date à laquelle l'article a été soumis
  update_date    DateTime?  // Date à laquelle l'article a été mis à jour

  images         Json[]  // Relation avec les images
  status         Status     
  article_type   Article_Type
  ArticleTags    ArticleTags[]
  ArticleWatches ArticleWatches[]
  category       Categories? @relation(fields: [category_id], references: [id])
  user           User       @relation(fields: [user_id], references: [id],  onDelete: Cascade)
  Comments       Comments[]
  Favorites      Favorites[]
}



model Favorites {
  user_id    String
  article_id Int
  article    Articles @relation(fields: [article_id], references: [id])
  user       User     @relation(fields: [user_id], references: [id],  onDelete: Cascade)

  @@id([user_id, article_id])
}

enum Status {
  PUBLISHED
  SUBMITTED
  DRAFT
}

enum Article_Type {
  GUIDE
  ARTICLE
  REVIEW
  TECHNICAL
  LEXIQUE
}
